


2022.10.29
    문제
    1. AI 캐릭터의 파라미터를 이용한 애니메이션의 변화의 사용에 따른 즉각적인 애니메이션의 변화가 적용되지 않는다.  
    2. 이를 해결하기 위해 애니메이션이 끝이난 후 다음 애니매이션을 적용 시키는 기능을 적용중 유니티가 과부화 되는 문제가 생겼다.

    버그 원인
    1. 공격 애니메이션에 시작은 파라미터로 진행된다.
    2. 파라미터로 진행됨에따라 즉각적인 애니메이션의 변환이 진행되지 않는다.
    3. 유한상태머신을 이용하여 1회성으로 기본공격을 사용한다.
    4. 공격 전 선 딜레이 시간과 애니메이션이 끝날때까지의 딜레이시간을 얻기 위해 코루틴을 사용하였다.
    5. while 문을 이용하여 애니메이션이 끝날때까지의 시간을 대기시킨다.
    6. while 문의 실행 시점에서는 파라미터만 변환 되어있고, 애니메이션은 변경되지 않은 상태이다.
    7. 때문에 애니메이션의 normalizedTime을 이용하여 진행상황이 끝났을때 종료시키려하면 공격 애니메이션이 실행되기 전 애니메이션이
    끝이났을때 조건이 걸려서 종료된다.
    8. and(&&)을 이용하여 애니메이션의 이름을 조건으로 넣게될 시 공격 애니메이션 시작 전 실행되어 while문이 무한 반복에 걸린다.
    9. 코루틴은 Update와는 별개의 진행을 하지만 코루틴 속 while문이 Update에서 애니메이션이 바뀌는동안의 과부하가 걸린다.

    해결 요점
    1. while 문 실행 시 공격 애니메이션이 실행되도록 한다.
    2. while 문이 실행이 되었을때 공격 애니메이션이 아닐경우 무한반복이 걸리지 않게 한다.
     
    해결 방안
    1. while 문 시작 전 약간의 딜레이를 주어 애니메이션이 변경될 시간을 얻는다.
    2. Has Exit Time의 사용
    3. 유한 상태머신에서 Update 부분에서 애니메이션이 끝을 받아온다. [적용]

    적용 리스크
    1. AI 캐릭터의 통합스크립트 이기때문에 애니메이션의 양식이 통일되어야한다.
     

2022.10.31
    리펙토링 진행도 확인
    1. AI 캐릭터의 행동 패턴 및 스킬의 통합 관리 기능 [완성] (행동관련 잔 버그 존재 확인)
    2. 적 캐릭터의 행동 패턴 및 스킬의 통합 관리 기능
    3. 플레이어 스킬의 통합 관리 기능
    3-1. 플레이어 스킬 통합 관리 기능의 스크립트 분리 여부 결정


2022.11.02
    진행 방식 선택
    1. AI 동료 캐릭터는 Partner_Dynamics 스크립트로 AI를 가진다.
    2. 스킬의 관리하여 호출해주는 SkillManager는 AI 캐릭터가 스킬의 사용 시 필요한 정보를 얻기 위해 Partner_Dynamics를 매개변수로 받아와 사용한다.
    3. 기존엔 AI 캐릭터의 스킬만을 호출했기에 Partner_Dynamics에 스킬의 사용에 필효한 데이터를 넣어뒀었다.
    4. 적 유닛과 플레이어 캐릭터의 스킬을 통합하여 관리하기 위해 Partner_Dynamics를 사용하지 않는 캐릭터에게서 정보를 받아올때를 위해 스킬의 사용에 필요한 정보가
    통합된 스크립트가 필요하다.



    

